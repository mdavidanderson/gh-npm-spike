name: Create Release

on:
  workflow_call:
    inputs:
      prerelease:
        description: A flag for creating a release as a prerelease
        type: boolean
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set tag
        id: set_tag
        run: |
          TAG="v${{ steps.extract_version.outputs.version }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Check tag
        if: ${{ !startsWith(steps.set_tag.outputs.tag, 'v') || steps.set_tag.outputs.tag == 'v' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed("An invalid tag was generated: ${{ steps.set_tag.outputs.tag }}")

      - name: Get existing tag
        id: tag_exists
        run: |
          tag="v0.0.5"
          status=$(curl --silent --write-out '%{http_code}' --output /dev/null "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag")
          echo "http-status=$status" >> $GITHUB_OUTPUT

      - name: Check tag-exists-status
        if: ${{ steps.tag_exists.outputs.http-status == 200 }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed("A tag already exists for ${{ steps.set_tag_outputs.tag }}")

      #- name: Create release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    prerelease: ${{ inputs.prerelease }}
      #    tag_name: ${{ steps.set_tag.outputs.tag }}
      #    token: ${{ secrets.GITHUB_TOKEN }}
